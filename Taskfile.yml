version: '3'

vars:
  CLIENT_DOCKER: grpc-todo-client
  SERVER_DOCKER: grpc-todo-server
  DOCKER_TAG: 1.0.0

tasks:
  init-folder:
    cmd: |
      find . -maxdepth 1 -type d -not -path . -execdir sh -c "pushd {}"; go mod init 'github.com/snirkop89/grpc-go-pro/{}'; popd" " ";"

  tidy:
    cmds:
    - cd proto && go mod tidy
    - cd client && go mod tidy
    - cd server && go mod tidy
    - go work sync


  protoc:
    cmd: |
      protoc -Iproto --go_out=. \
             --go_opt=paths=source_relative \
             --go-grpc_out=. \
             --go-grpc_opt=paths=source_relative \
             --validate_out="lang=go,paths=source_relative:proto" \
             proto/todo/v2/*.proto 

  # Generate proto using buf
  # First use `buf mod init`
  buf-gen:
    cmd: buf generate proto

  bazel:
    cmd: bazel run //:gazelle

  server:
    cmd: go run ./server/ 0.0.0.0:50051 0.0.0.0:50052

  client:
    cmd: go run ./client/ dns:///$HOSTNAME:50051

  build-server:
    cmd: docker build -f ./server/Dockerfile -t {{.SERVER_DOCKER}}:{{.DOCKER_TAG}} .

  build-client:
    cmd: docker build -f ./client/Dockerfile -t {{.CLIENT_DOCKER}}:{{.DOCKER_TAG}} .

# Load tests. Disable rate limiting interceptors before using.
  ghz:
    cmd: |
      ghz --proto ./proto/todo/v2/todo.proto \
          --import-paths=proto \
          --call todo.v2.TodoService.AddTask \
          --data '{"description":"task"}' \
          --cacert ./certs/ca_cert.pem \
          --cname "check.test.example.com" \
          --metadata '{"auth_token":"authd"}' \
          0.0.0.0:50051


# Kind commands
  kind-up:
    cmd: kind create cluster --config k8s/kind.yaml --name grpc

  kind-down:
    cmd: kind delete cluster --name grpc

  kind-load:
    cmds: 
    - kind load docker-image "{{.CLIENT_DOCKER}}:{{.DOCKER_TAG}}"  "{{.SERVER_DOCKER}}:{{.DOCKER_TAG}}" --name grpc

  deploy:
    cmds:
    - kubectl apply -f ./k8s/server.yaml -f ./k8s/client.yaml

  uninstall:
    cmds:
    - kubectl delete -f ./k8s/server.yaml -f ./k8s/client.yaml